namespace Domain.Models;

/// <summary>
/// Summary Generated by AI
/// Base abstract class for all address types in the system.
/// This class serves as the foundation for different types of addresses (e.g., home, company).
///
/// Key features:
/// - Provides common properties that all addresses must have
/// - Enables inheritance for specific address types
/// - Ensures consistency in address handling across the application
///
/// Current implementations:
/// - ContactHomeAddress: For residential/personal addresses
///
/// Properties:
/// - ContactAddressId: Unique identifier for the address
/// - Street: The street name and number
/// - PostalCode: The postal/zip code
/// - City: The city name
///
/// Usage Example:
/// var homeAddress = new ContactHomeAddress
/// {
///     Street = "123 Main St",
///     PostalCode = 12345,
///     City = "Stockholm"
/// };
/// </summary>
public abstract class ContactAdress
{
    public int ContactAdressId { get; set; }
    public string Street { get; set; } = null!;
    public int PostalCode { get; set; }
    public string City { get; set; } = null!;
}
/// <summary>
/// Represents a home/residential address type.
/// Inherits base address properties from ContactAddress and adds home-specific attributes.
///
/// Additional features:
/// - Includes ContactType property to explicitly identify as "Home" address
/// - Can be extended with more home-specific properties as needed
/// </summary>
public class ContactHomeAdress : ContactAdress
{
   public string ContactType { get; set; } = "Home";
}